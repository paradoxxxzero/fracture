const float PI = 3.1415926535897932384626433832795;
const float TAU = 6.283185307179586476925286766559;
const float ETA = 1.5707963267948966192313216916398;
const float PHI = 1.6180339887498948482045868343656;
const float GAMMA = 0.5772156649015328606065120900824;
const float E = 2.7182818284590452353602874713527;
const float SQRT2 = 1.4142135623730950488016887242097;
const float SQRT3 = 1.7320508075688772935274463415059;
const float LN10 = 2.3025850929940456840179914546844;
const float LN2 = 0.69314718055994530941723212145818;
const float LEMNISCATE = 2.6220575542921198109666348067973;
const float GAUSS = 0.83462684167407318628142973279905;
const float pi = PI;
const float tau = TAU;
const float eta = ETA;
const float phi = PHI;
const float gamma = GAMMA;
const float e = E;
const float sqrt2 = SQRT2;
const float sqrt3 = SQRT3;
const float ln10 = LN10;
const float ln2 = LN2;
const float lemniscate = LEMNISCATE;
const float gauss = GAUSS;

const float[] B2nN = float[](1., 1., -1., 1., -1., 5., -691., 7., -3617., 43867., -174611., 854513., -236364091., 8553103., -23749461029., 8615841276005., -7709321041217., 2577687858367., -26315271553053477373., 2929993913841559., -261082718496449122051., 1520097643918070802691., -27833269579301024235023., 596451111593912163277961., -5609403368997817686249127547., 495057205241079648212477525., -801165718135489957347924991853., 29149963634884862421418123812691., -2479392929313226753685415739663229., 84483613348880041862046775994036021.);
const float[] B2nD = float[](1., 6., 30., 42., 30., 66., 2730., 6., 510., 798., 330., 138., 2730., 6., 870., 14322., 510., 6., 1919190., 6., 13530., 1806., 690., 282., 46410., 66., 1590., 798., 870., 354., 56786730., 6., 510., 64722., 30., 4686., 140100870., 6., 30., 3318., 230010., 498., 3404310., 6., 61410., 272118., 1410., 6., 4501770., 6., 33330.);
const vec2 c0 = vec2(0., 0.);
const vec2 c1 = vec2(1., 0.);
const vec2 ci = vec2(0., 1.);

vec2 R(float x) {
  return vec2(x, 0.);
}
vec2 I(float y) {
  return vec2(0., y);
}
